using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.IO;
using System.Data;

public partial class admin_upload_ocv : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }
    protected void AJAXUploader1_FileUploaded1(object sender, EventArgs e)
    {
        if (DDLClubName.SelectedItem.Text=="Select")
        {
            string jv = "<script>alert('Please Select Club Name.');</script>";
            ScriptManager.RegisterClientScriptBlock(this, typeof(Page), "alert", jv, false);
            return;
        }
        else
        {
        }        

        foreach (EO.Web.AJAXPostedFile file in AJAXUploader1.PostedFiles)
        {
            //Get the temp file name
            string tempFileName = file.TempFileName;

            if (file.Length > 31457280)
            {
                string jv = "<script>alert('The size of the submitted data exceeded the maximum allowed size.');</script>";
                ScriptManager.RegisterClientScriptBlock(this, typeof(Page), "alert", jv, false);
                return;
            }
            else
            {
            }

            //Create the final file name based on the original file name
            // string finalFileName = System.IO.Path.Combine("D:\\District3140\\testfile\\", file.ClientFileName);

            string path = Server.MapPath(@"../OCV_Report_Books\");
            string finalFileName = path + file.ClientFileName;
            // string finalFileName = System.IO.Path.Combine("~/testfile\\", file.ClientFileName);

            //Move the file to the desired location
            try
            {
                System.IO.File.Move(tempFileName, finalFileName);
            }
            catch (System.Exception excep)
            {
                //  MessageBox.Show(excep.Message);
            }

            AddDownloads(file.ClientFileName, file.Length.ToString());

        }
    }

    private void AddDownloads(string fileName, string fileSize)
    {
        /************Code for find IP address of user's machine**********/
        string ipaddress;
        // Look for a proxy address first
        ipaddress = Request.ServerVariables["HTTP_X_FORWARDED_FOR"];
        // If there is no proxy, get the standard remote address
        if (ipaddress == "" || ipaddress == null)
            ipaddress = Request.ServerVariables["REMOTE_ADDR"];
        /***************************************************************/

       
        try
        { 
            int distID = int.Parse(DDLClubName.SelectedValue.ToString());

            DBconnection obj = new DBconnection();
            obj.SetCommandSP = "z_AddOCVBookRpt";          

            obj.AddParam("@ocv_files", fileName);
            obj.AddParam("@file_size", fileSize);

            obj.AddParam("@DistrictClubID", distID);
            obj.AddParam("@ip_address", ipaddress);

            int exe = obj.ExecuteNonQuery();

            if (exe > 0)
            {
                string jv = "<script>alert('Your file has been submitted successfully');</script>";
                ScriptManager.RegisterClientScriptBlock(this, typeof(Page), "alert", jv, false);
            }
        }
        catch { }
    }
    protected void UploadButton_Click(object sender, EventArgs e)
    {
        if (DDLClubName.SelectedItem.Text == "Select")
        {
            string jv = "<script>alert('Please Select Club Name.');</script>";
            ScriptManager.RegisterClientScriptBlock(this, typeof(Page), "alert", jv, false);
            return;
        }
        else
        {
        }       
    }
}
